
  void loginCourier(){
    if( _email.text.toString() != '' || _password.text.toString() != ''){
        // authingFunction(_email.text , _password.text);
             print(authInfo['data']['access_token']);
              print(authInfo['data']['token_type']);
              print(courierInfo['data']['id']);
              print(courierInfo['data']['name']);


        if(box.read('email') != ''  && box.read('token') != '' ){
          Navigator.of(context).push(MaterialPageRoute(builder: (context) => const Homepage()));
        }else{
          ScaffoldMessenger.of(context).showSnackBar(
                const SnackBar(content:  Text('Invalid Information | Contact Support ' , style: TextStyle(fontWeight: FontWeight.bold),) , backgroundColor: Colors.red,)
              );    
          }
    }else{
      ScaffoldMessenger.of(context).showSnackBar(
        const SnackBar(content:  Text('Invalid Information | Contact Support ' , style: TextStyle(fontWeight: FontWeight.bold),) , backgroundColor: Colors.red,)
      );
    }
  }


  List<Map<String,dynamic>> courierInfo  = [];
   List<Map<String,dynamic>> authInfo  = [];
    
    Future<Map<String, dynamic>>  authingFunction (email , password) async{
        try{
          final res = await http.post(
            Uri.parse(demoBaseUrl + methods[0]),
            headers: {"Content-Type": "application/json" , "Accept" : "application/json"} ,
            body:jsonEncode({ "email" : email , "password" : password})
          );
          final data = jsonDecode(res.body);
          if( data['status'] == 200 ){
            final courierData  = await http.get(Uri.parse(demoBaseUrl + methods[3]),
              headers: {"Content-Type": "application/json" , "Accept" : "application/json" , 'Authorization': data['data']['access_token'] },
            );
            final courier  = jsonDecode(courierData.body);
            if( courier['status'] == 200 ){
              setState(() {
                authInfo = data ;
                courierInfo = courier ;
              });
            }
          }
          return  data;
        }catch(e){
          throw  e.toString();
        }
      }

